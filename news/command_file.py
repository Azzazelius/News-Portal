from django.contrib.auth.models import User
from news.models import Author
from news.models import Category
from news.models import Post
from news.models import Comment


# ================================ Создать двух юзеров -- авторов
new_user_1 = User.objects.create_user('notalake')
author_1 = Author.objects.create(full_name='Alan Wake', user=new_user_1)

new_user_2 = User.objects.create_user('TheWriter')
author_2 = Author.objects.create(full_name='Stephen King', user=new_user_2)

new_user_3 = User.objects.get(username='noName_Hater') # запасной юзер для разнообразия комментариев

# ================================ создание 4 категорий
Category.objects.bulk_create([Category(category_name='science'), Category(category_name='social'), Category(category_name='culture'), Category(category_name='politics')])


# ================================ создание 2 статей и 1 новости с присвоенными категориями
# ----------- отдельно контент постов, чтобы не захламлять строки кода

article_1 = '''В Пхеньяне проходят массовые аресты по так называемому «танцевальному делу», в ходе которого своих постов лишились 11 высших офицеров и более полутора тысяч их сообщников со всех уровней пирамиды власти. По мнению следствия, они готовили госпереворот с целью легализации в стране южнокорейских вокально-танцевальных коллективов, выступающих в жанре K-pop.
Полный запрет на исполнение и прослушивание кейпопа действует в КНДР с 1994 года, когда Ким Чен Ир посетил выступление группы BTS в Сунчхоне. Северокорейскому лидеру такая музыка показалась безыдейной и «расслабляющей разум», поэтому он подписал указ о её запрете, который уже в следующем месяце был внесён в текст Уголовного кодекса страны.
По всей стране прошли аресты и облавы на концерты кей-поперов, и вскоре музыканты этого направления в стране ушли в глубокое подполье. По словам представителя народной милиции Пхеньяна, в прошлом году в ходе оперативных действий была обнаружена подпольная студия, где любительские коллективы, участники которых были членами государственных оркестров, тайно собирались по ночам, чтобы потанцевать под музыку K-pop исполнителей и полюбоваться фотографиями своих «айдолов». В числе подпольщиков оказалось 11 генералов Центрального военного оркестра КНДР.
«Они планировали захватить президентский дворец и под дулом револьвера заставить нашего уважаемого лидера Ким Чен Ына подписать указ, возвративший эту музыку в правовое поле, – говорит старший гросс-маршал полиции Пхеньяна Пак Чон Иль. – Им было невдомёк, что пули не страшны нашему вождю, которого защищает любовь народа и сила Партии. Тем не менее, мы пресекли их коварные планы. Арестованы генералы вместе со своими оркестрами, в настоящее время проводится следствие, чтобы выяснить остальных их сообщников. Все они будут приговорены к расстрелу из гаубицы».'''

article_2 = ''' Недавно исследователи открыли факт загрязнения наших водопроводных систем опасным химикатом. Этот химикат бесцветный, безвкусный и не имеет запаха. Он убивает бесчисленное множество людей каждый год. Правительство не предприняло никаких попыток регулирования этого опасного заражения. Данный химикат называется «дигидрогена монооксид» (Dihydrogen monoxide).
Химикат используется для следующих целей:
В производстве как растворитель и охладитель
В ядерных реакторах
В производстве пенопласта
В огнетушителях
В химических и биологических лабораториях
В производстве пестицидов
В искусственных пищевых добавках
Химикат является основной составляющей кислотных дождей, способствует эрозии почвы, ускоряет коррозию и вредит большинству электроприборов.
Длительный контакт с химикатом в его твёрдой форме приводит к серьёзным повреждениям кожи человека, контакт с газообразной формой химиката приводит к сильным ожогам, вдыхание даже небольшого количества химиката грозит смертельным исходом. Химикат обнаружен в злокачественных опухолях, нарывах, язвах и прочих болезненных изменениях тела. Химикат развивает наркозависимость, жертвам при воздержании от потребления химиката грозит смерть в течение 168 часов.
Ни один известный очиститель не способен полностью очистить воду от этого химиката.
Несмотря на эти опасности, химикат активно и безнаказанно используется в индустрии. Многие корпорации ежедневно получают тонны химиката через специально проложенные подземные трубопроводы. Люди, работающие с химикатом, как правило, не получают спецодежды и инструктажа. Отработанный химикат тоннами выливается в реки и моря.
Мы призываем население проявить сознательность и протестовать против дальнейшего использования этого опасного химиката. '''

news_1 = ''' Почерковедческая комиссия Санкт-Петербургского государственного института литературоведения изучила рукописи 11 произведений, известных как творения американского писателя Говарда Филипса Лавкрафта. Эксперты установили, что подлинным автором историй об ужасных подводных и космических обитателях является российский писатель Михаил Зощенко.
Ещё будучи подростком, Зощенко подрабатывал «литературным негром» у более именитых писателей, чтобы зарабатывать себе на жизнь. В числе его заказчиков был и некий иностранец, которого он описывает в своих дневниках, но никогда не называет по имени. Иностранец приплывал в Санкт-Петербург на пароходе раз в полгода, чтобы забрать у Зощенко рукописи его сочинений на английском языке, и платил по 4 цента за страницу. Позже эти рассказы, лишь слегка отредактированные, выходили в США как повести Лавкрафта и имели оглушительный коммерческий успех. Михаил Зощенко, будучи от природы скромным человеком, до самой смерти не заявлял о своём авторстве этих произведений.
Изначально действия всех этих произведений происходили в Петрограде и его пригородах, и было перенесено в американскую Новую Англию заокеанскими редакторами. Ктулху, согласно рукописи Зощенко, спал где-то на дне Ладожского озера, а забытый богом городок Инсмут, где происходили ужасные и отвратительные события, располагался на месте современного Мурино. В ближайшее время российские литературоведы подготовят иск к наследникам Лавкрафта с целью восстановления подлинного авторства произведений. '''

post_1 = Post.objects.create(post_type='ar',title='Группа мятежных генералов пыталась добиться легализации K-pop в КНДР', content=article_1, author=author_2).category.add(*Category.objects.filter(category_name__in=['social', 'politics']))
post_2 = Post.objects.create(post_type='ar',title='Дигидрогена монооксид', content=article_2, author=author_1).category.add(*Category.objects.filter(category_name__in=['social', 'science']))
post_3 = Post.objects.create(post_type='nw',title='Настоящим автором книг Говарда Лавкрафта оказался Михаил Зощенко', content=news_1, author=author_2).category.add(Category.objects.get(category_name='culture'))

# ====================== создание комментариев

comment_1 = Comment.objects.create(comment='Всё это чуждая нам музыка!',post=post_1,user=new_user_3)
comment_2 = Comment.objects.create(comment='Я так и знал! Власти скрывают!',post=post_2,user=new_user_3)
comment_3 = Comment.objects.create(comment='Ктулху фхтагн',post=post_3,user=new_user_2)
comment_4 = Comment.objects.create(comment='''Пх'нглуи мглв'нафх Ктулху Р'льех вгах'нагл фхтагн''',post=post_3,user=new_user_1)
comment_5 = Comment.objects.create(comment='''Наркоманы...''',post=post_3,user=new_user_3)

# ====================== изменение рейтинга постов и комментов

post_2.dislike()

post_3.like()
post_3.like()
post_3.like()

comment_1.dislike()
comment_1.dislike()
comment_1.dislike()

comment_2.like()
comment_2.like()
comment_2.like()
comment_2.dislike()

comment_3.like()
comment_3.dislike()

comment_4.like()
comment_4.like()
comment_4.like()
comment_4.like()
comment_4.like()

# ====================== обновление рейтинга юзеров (пока не работает)


new_user_1 = User.objects.create_user('notalake')

new_user_1.update_rating()
User.objects.get('notalake').update_rating()
-----------------------------------

from django.contrib.auth.models import User
from news.models import Author
from news.models import Category
from news.models import Post
from news.models import Comment

Author.objects.get(full_name='Alan Wake').update_rating()



# ================== превью поста
Post.objects.get(id='1').preview()